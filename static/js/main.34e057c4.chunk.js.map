{"version":3,"sources":["components/Header.js","components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","components/Footer.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","ToDoForm","props","_useState","useState","edit","value","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","alert","Fragment","type","placeholder","name","onChange","ref","onClick","ToDo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_ToDoForm","map","todo","index","isComplete","key","index_esm","fa_index_esm","ToDoList","initTodo","localStorage","getItem","JSON","parse","setTodos","setItem","stringify","test","newTodos","concat","toConsumableArray","components_ToDo","updatedTodos","remainingTodos","filter","todoId","newValue","prev","item","Footer","href","App","components_Header","components_ToDoList","components_Footer","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.34e057c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <h1>\r\n                To-do List App using ReactJS\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction ToDoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!input) {\r\n            alert(\"To-do Can't be Empty, Please enter something\");\r\n        } else {\r\n            props.onSubmit({\r\n                id: Math.floor(Math.random() * 50000),\r\n                text: input\r\n            });\r\n\r\n            setInput('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='ToDoForm'>\r\n\r\n            {\r\n                props.edit ?\r\n                    (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Update your To-Do'\r\n                                value={input}\r\n                                name='text'\r\n                                className='ToDoInput edit'\r\n                                onChange={handleChange}\r\n                                ref={inputRef}\r\n                            />\r\n                            <button onClick={handleSubmit} className='ToDoButton edit'>\r\n                                Update ToDo\r\n                            </button>\r\n                        </>\r\n                    ) :\r\n                    (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                placeholder='Add a To-Do'\r\n                                value={input}\r\n                                name='text'\r\n                                className='ToDoInput'\r\n                                onChange={handleChange}\r\n                                ref={inputRef}\r\n                            />\r\n                            <button onClick={handleSubmit} className='ToDoButton'>\r\n                                Add ToDo\r\n                            </button>\r\n                        </>\r\n                    )\r\n            }\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","import React, { useState } from 'react';\r\nimport ToDoForm from './ToDoForm';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nconst ToDo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <ToDoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'ToDoRow complete' : 'ToDoRow'}\r\n            key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className='icons'>\r\n                <AiFillCloseCircle\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='deleteIcon'\r\n                />\r\n                <FaEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className='editIcon'\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default ToDo;","import React, { useState, useEffect } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\nimport ToDo from './ToDo'\r\n\r\nfunction ToDoList() {\r\n    let initTodo;\r\n    if (localStorage.getItem(\"Todo\") === null) {\r\n        initTodo = [];\r\n    }\r\n    else {\r\n        initTodo = JSON.parse(localStorage.getItem(\"Todo\"));\r\n    }\r\n\r\n    const [todos, setTodos] = useState(initTodo);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Todo\", JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const remainingTodos = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(remainingTodos);\r\n\r\n        localStorage.setItem(\"Todo\", JSON.stringify(todos));\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>List down your plans for Today!</h2>\r\n            <ToDoForm onSubmit={addTodo} />\r\n            <ToDo\r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footer'>\r\n            Copyright &#169; 2022, All rights reserved <br />\r\n            Made with &hearts; by <a href=\"https://sagardng123.wixsite.com/sagardng\">SagarDNG</a>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport ToDoList from './components/ToDoList';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div className=\"ToDoApp\">\n        <ToDoList />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}